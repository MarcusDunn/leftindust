schema {
    query: Query
    mutation: Mutation
}

type Mutation {
    addClinic(clinic: CreateClinic!): Clinic!
    editClinic(clinic: EditClinic!): Clinic
    addSurveyTemplate(surveyTemplate: CreateSurveyTemplate!): SurveyTemplate!
}

type SurveyTemplateId {
    value: UUID!
}

input EditClinic {
    cid: ClinicIdInput!
    name: String
    address: CreateAddress
    doctors: [DoctorIdInput!]! = []
}

type DoctorId {
    value: UUID!
}

input DoctorIdInput {
    value: UUID!
}

input CreateClinic {
    name: String!
    address: CreateAddress!
    doctors: [DoctorIdInput!]! = []
}

enum AddressType {
    Home
    Work
    School
    Apartment
    Other
}

enum Countries {
    Canada
}

input CreateAddress {
    addressType: AddressType!
    address: String!
    city: String!
    country: Countries!
    province: String!
    postalCode: String!
}

type Query {
    mockingbirdIsAlive: Boolean!
    clinicByClinicId(clinicId: ClinicIdInput!): Clinic
    userByUserUniqueId(uniqueId: String): MediqUser
    surveyTemplateBySurveyTemplateId(surveyTemplateId: SurveyTemplateIdInput): SurveyTemplate
}

input SurveyTemplateIdInput {
    value: UUID
}

input CreateSurveyTemplate {
    title: String!
    subtitle: String
    sections: [CreateSurveyTemplateSection!]!
    calculations: [CreateSurveyTemplateCalculation!]! = []
}

input CreateSurveyTemplateCalculation {
    label: String!,
    inputType: SurveyTemplateInputType,
    showOnComplete: Boolean!,
    calculation: String!,
}

enum SurveyTemplateInputType {
    Text
    Number
    Date
    Paragraph
    Upload
    SingleSelect
    MultiSelect
    Title
}

input CreateSurveyTemplateSection {
    title: String!,
    subtitle: String,
    inputs: [CreateSurveyTemplateSectionInput!]!,
}

input CreateSurveyTemplateSectionInput {
    type: SurveyTemplateInputType!,
    label: String!,
    options: [String!],
    placeholder: String,
    required: Boolean!,
    category: SurveyTemplateCategory!,
    uploadMultiple: Boolean,
    uploadAccept: TemplateInputUploadType,
}

enum TemplateInputUploadType {
    All
    Images
    Documents
}

enum SurveyTemplateCategory {
    Date
    Title
    Body
}

type SurveyTemplate {
    id: SurveyTemplateId!
    sections: [SurveyTemplateSection!]!
}

type SurveyTemplateSection {
    id: SurveyTemplateSectionId!
    title: String!
    subtitle: String
}

type SurveyTemplateSectionId {
    value: UUID!
}

type MediqUserId {
    value: UUID!
}

type MediqGroupId {
    value: MediqGroupId
}

type MediqGroup {
    id: MediqGroupId
    name: String
}

type MediqUser {
    id: MediqUserId
    group: MediqGroup
    name: NameInfo
    accountDetails: UserAccountDetails
}

type UserAccountDetails {
    isRegistered: Boolean!
    email: String
}

type NameInfo {
    firstName: String
    middleName: String
    lastName: String
}

type ClinicId {
    value: UUID!
}

input ClinicIdInput {
    value: UUID!
}

type Clinic {
    id: ClinicId!
    name: String!
}

scalar UUID
scalar Base64