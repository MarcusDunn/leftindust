schema: http://emr.leftindust.com/api/graphql

generates:
  ./src/api/server/graphql/schema/leftindust.schema.ts:
    hooks:
      afterOneFileWrite:
        - eslint --fix
    plugins:
      - typescript

    config:
      maybeValue: T | undefined
      useTypeImports: true
      resolverTypeWrapperSignature: "T extends { __typename: TypenameTemplateLiteralType } ? T : Optional<T, '__typename'>"

  ./src/api/server/graphql/requests/index.ts:
    documents: 'src/api/server/graphql/requests/**/*.graphql'
    preset: import-types

    presetConfig:
      typesPath: ../schema/leftindust.schema
      importTypesNamespace: Schema

    hooks:
      afterOneFileWrite:
        - eslint --fix

    plugins:
      - add:
          content: '/* eslint-disable @typescript-eslint/ban-types */'
      - typescript-operations
      - typescript-resolvers
      - typed-document-node
      - urql-svelte-operations-store
      # - typescript-urql-graphcache

    config:
      maybeValue: T | undefined
      useTypeImports: true
      dedupeFragments: true
      nonOptionalTypename: true
      avoidOptionals:
        field: true 
        object: false
        inputValue: true
        defaultValue: true

  ./src/api/server/graphql/schema/leftindust.schema.graphql:
    plugins:
      - schema-ast
